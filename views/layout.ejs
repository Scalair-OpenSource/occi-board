<!DOCTYPE html>
<html>
  <head>
  <title><%= __('Occi Dashboard') %></title>
  <link rel="icon" type="image/png" href="favicon.png" />
  <!--[if IE]><link rel="shortcut icon" type="image/x-icon" href="favicon.ico" /><![endif]-->

  <!-- Viewport mobile tag for sensible mobile support -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


  <!--
    Stylesheets and Preprocessors
    ==============================

    You can always bring in CSS files manually with `<link>` tags, or asynchronously
    using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
    of Sails' conventional asset pipeline (boilerplate Gruntfile).

    By default, stylesheets from your `assets/styles` folder are included
    here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
    are supported. In production, your styles will be minified and concatenated into
    a single file.

    To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
    For example, here are a few things you could do:

      + Change the order of your CSS files
      + Import stylesheets from other directories
      + Use a different or additional preprocessor, like SASS, SCSS or Stylus
  -->

  <!--STYLES-->

  <!--STYLES END-->

  <link rel="stylesheet" href="/styles/themes/<%= theme %>/libs/bootstrap3/less/bootstrap<%= minified %>.css"/>
  <!-- <link rel="stylesheet" href="/components/fontawesome/fonts/font-awesome.css"/> -->
  <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
  <!--[if lt IE 9]>
    <script type="text/javascript" src="/styles/themes/<%= theme %>/libs/bootstrap3/assets/js/html5shiv.js"></script>
    <script type="text/javascript" src="/styles/themes/<%= theme %>/libs/bootstrap3/assets/js/respond.min.js"></script>
  <![endif]-->
  <link rel="stylesheet" href="/styles/themes/<%= theme %>/libs/scrollbar-plugin/jquery-mCustomScrollbar<%= minified %>.css" rel="stylesheet" />
  <link rel="stylesheet" href="/styles/themes/<%= theme %>/dashboard<%= minified %>.css"/>
  <link rel="stylesheet" href="/styles/themes/<%= theme %>/tiles/feed-tiles<%= minified %>.css"/>
  <link rel="stylesheet" href="/styles/themes/<%= theme %>/tiles/datetime-tiles<%= minified %>.css"/>
  <link rel="stylesheet" href="/styles/themes/<%= theme %>/tiles/webpage-tiles<%= minified %>.css"/>
  <link rel="stylesheet" href="/styles/themes/<%= theme %>/tiles/tasker-tiles<%= minified %>.css"/>

  </head>

  <body>
  <%- body %>

  <!--
    Client-side Templates
    ========================

    HTML templates are important prerequisites of modern, rich client applications.
    To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
    that you load these templates client-side.

    By default, your Gruntfile is configured to automatically load and precompile
    client-side JST templates in your `assets/templates` folder, then
    include them here automatically (between TEMPLATES and TEMPLATES END).

    To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
    For example, here are a few things you could do:

      + Import templates from other directories
      + Use a different template engine (handlebars, jade, dust, etc.)
      + Internationalize your client-side templates using a server-side
        stringfile before they're served.
  -->

  <!--TEMPLATES-->

  <!--TEMPLATES END-->


  <!--

    Client-side Javascript
    ========================

    You can always bring in JS files manually with `script` tags, or asynchronously
    on the client using a solution like AMD (RequireJS).  Or, if you like, you can
    take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

    By default, files in your `assets/js` folder are included here
    automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
    CoffeeScript (.coffee) are supported. In production, your scripts will be minified
    and concatenated into a single file.

    To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
    For example, here are a few things you could do:

      + Change the order of your scripts
      + Import scripts from other directories
      + Use a different preprocessor, like TypeScript

  -->

  <!--SCRIPTS-->
  <script src="/js/dependencies/sails.io.js"></script>
  <script src="/components/modernizr/modernizr.js"></script>
  <script src="/components/jstz-detect/jstz.js"></script>
  <script src="/components/lodash/lodash.js"></script>
  <script src="/components/moment/moment.js"></script>
  <script src="/components/moment-timezone/moment-timezone.js"></script>
  <script src="/components/jquery/dist/jquery.js"></script>
  <script src="/components/accountingjs/accounting.js"></script>
  <script src="/js/internal/class.js"></script>
  <script src="/js/internal/cloud-base.js"></script>
  <script src="/js/internal/cloud-i18n.js"></script>
  <script src="/js/init.js"></script>
  <script src="/js/tiles/common-lib.js"></script>
  <script src="/js/tiles/common-storage.js"></script>
  <script src="/js/tiles/dashboard-tile.js"></script>
  <script src="/js/tiles/datetime-tiles.js"></script>
  <script src="/js/tiles/feed-tiles.js"></script>
  <script src="/js/tiles/map-tiles.js"></script>
  <script src="/js/tiles/tasker-storage.js"></script>
  <script src="/js/tiles/tasker-tiles.js"></script>
  <script src="/js/tiles/webpage-tiles.js"></script>
  <script src="/js/dashboard.js"></script>
  <!--SCRIPTS END-->
  </body>
</html>
